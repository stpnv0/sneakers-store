services:
  nginx:
    image: nginx:alpine
    container_name: sneakers_nginx
    ports:
      - "80:80" 
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro 
      - ./sneakers_store/frontend/dist:/var/www/frontend:ro 
      - ./nginx/logs:/var/log/nginx 
    depends_on:
      - api_gateway
    restart: unless-stopped
    networks:
      - sneakers_network

  postgres:
    image: postgres:13-alpine
    container_name: sneakers_db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sneaker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d sneaker"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - sneakers_network

  redis:
    image: redis:alpine
    container_name: sneakers_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - sneakers_network

  cart_postgres:
    image: postgres:13-alpine
    container_name: cart_postgres
    environment:
      POSTGRES_USER: cart_user
      POSTGRES_PASSWORD: cart_password
      POSTGRES_DB: cart_db
    ports:
      - "5433:5432"
    volumes:
      - cart_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cart_user -d cart_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - sneakers_network

  cart_redis:
    image: redis:alpine
    container_name: cart_redis
    ports:
      - "6380:6379"
    volumes:
      - cart_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - sneakers_network

  cart_migrations:
    build:
      context: ./cart_service
      dockerfile: Dockerfile
    container_name: cart_migrations
    command: sh /app/scripts/run_migrations.sh
    environment:
      - POSTGRES_HOST=cart_postgres
      - POSTGRES_USER=cart_user
      - POSTGRES_PASSWORD=cart_password
      - POSTGRES_DB=cart_db
    depends_on:
      cart_postgres:
        condition: service_healthy
    restart: on-failure
    networks:
      - sneakers_network

  favourites_postgres:
    image: postgres:15-alpine
    container_name: favourites_postgres
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: favourites_user
      POSTGRES_PASSWORD: favourites_password
      POSTGRES_DB: favourites_db
    volumes:
      - favourites_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U favourites_user -d favourites_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - sneakers_network

  favourites_redis:
    image: redis:alpine
    container_name: favourites_redis
    ports:
      - "6381:6379"
    volumes:
      - favourites_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - sneakers_network

  favourites_migrations:
    build:
      context: ./fav_service
      dockerfile: Dockerfile
    container_name: favourites_migrations
    command: sh /app/scripts/run_migrations.sh
    environment:
      - POSTGRES_HOST=favourites_postgres
      - POSTGRES_USER=favourites_user
      - POSTGRES_PASSWORD=favourites_password
      - POSTGRES_DB=favourites_db
    depends_on:
      favourites_postgres:
        condition: service_healthy
    restart: on-failure
    networks:
      - sneakers_network

  backend:
    build:
      context: ./sneakers_store/backend
      dockerfile: Dockerfile
    container_name: sneakers_backend
    depends_on:
      postgres:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    environment:
      - DB_HOST=postgres
      - CART_SERVICE_INTERNAL_URL=http://sneakers_cart:8081 
      - FAVOURITES_SERVICE_INTERNAL_URL=http://sneakers_favourites:8082
      - SSO_SERVICE_GRPC_TARGET=sneakers_sso:44044
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - sneakers_network

  migrator:
    image: migrate/migrate:latest
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./sneakers_store/backend/db/migrations:/migrations
    command: ["-path", "/migrations", "-database", "postgresql://root:password@postgres:5432/sneaker?sslmode=disable", "up"]
    restart: on-failure
    networks:
      - sneakers_network

  cart_service:
    build:
      context: ./cart_service
      dockerfile: Dockerfile
    container_name: sneakers_cart
    depends_on:
      cart_redis:
        condition: service_healthy
      cart_postgres:
        condition: service_healthy
      cart_migrations:
        condition: service_completed_successfully
    environment:
      - REDIS_HOST=cart_redis
      - REDIS_PORT=6379
      - POSTGRES_DSN=postgres://cart_user:cart_password@cart_postgres:5432/cart_db?sslmode=disable
    restart: unless-stopped
    networks:
      - sneakers_network

  favourites_service:
    build:
      context: ./fav_service
      dockerfile: Dockerfile
    container_name: sneakers_favourites
    depends_on:
      favourites_postgres:
        condition: service_healthy
      favourites_redis:
        condition: service_healthy
    environment:
      - POSTGRES_DSN=postgres://favourites_user:favourites_password@favourites_postgres:5432/favourites_db?sslmode=disable
      - REDIS_HOST=favourites_redis
      - REDIS_PORT=6379
    restart: unless-stopped
    networks:
      - sneakers_network

  sso_migrations:
    build:
      context: .
      dockerfile: sso_service/Dockerfile
    container_name: sso_migrations
    command: ./sso_migrator -storage-path=/root/storage/sso.db -migrations-path=/root/migrations
    volumes:
      - sso_data:/root/storage
    environment:
      - STORAGE_PATH=/root/storage/sso.db
    restart: on-failure
    networks:
      - sneakers_network

  sso_service:
    build:
      context: .
      dockerfile: sso_service/Dockerfile
    container_name: sneakers_sso
    restart: unless-stopped
    depends_on:
      sso_migrations:
        condition: service_completed_successfully
    ports:
      - "44044:44044"
    volumes:
      - sso_data:/root/storage
    environment:
      - GIN_MODE=release
      - STORAGE_PATH=/root/storage/sso.db
    networks:
      - sneakers_network

  api_gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: sneakers_api_gateway
    ports:
      - "8083:8083"
    restart: unless-stopped
    depends_on:
      - backend
      - cart_service
      - favourites_service
      - sso_service
    networks:
      - sneakers_network

networks:
  sneakers_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  cart_postgres_data:
  cart_redis_data:
  favourites_postgres_data:
  favourites_redis_data:
  sso_data: